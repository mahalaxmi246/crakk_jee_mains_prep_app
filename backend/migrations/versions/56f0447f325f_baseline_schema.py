"""baseline schema

Revision ID: 56f0447f325f
Revises: 
Create Date: 2025-10-11 20:12:43.073018
"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision: str = "56f0447f325f"
down_revision: Union[str, Sequence[str], None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    """Upgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "problems",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("subject", sa.Enum("math", "physics", "chemistry", name="subjectenum"), nullable=False),
        sa.Column("topic", sa.String(length=120), nullable=False),
        sa.Column("chapter", sa.String(length=120), nullable=False),
        sa.Column("difficulty", sa.Enum("easy", "medium", "hard", name="difficultyenum"), nullable=False),
        sa.Column("question_tex", sa.Text(), nullable=False),
        sa.Column("option_a_tex", sa.Text(), nullable=False),
        sa.Column("option_b_tex", sa.Text(), nullable=False),
        sa.Column("option_c_tex", sa.Text(), nullable=False),
        sa.Column("option_d_tex", sa.Text(), nullable=False),
        sa.Column("correct_option", sa.String(length=1), nullable=False),
        sa.Column("hint_tex", sa.Text(), nullable=True),
        sa.Column("solution_tex", sa.Text(), nullable=True),
        sa.Column("attempt_count", sa.Integer(), nullable=False),
        sa.Column("solve_count", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.Column("updated_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.CheckConstraint("correct_option IN ('A','B','C','D')", name="ck_correct_option"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_problems_chapter", "problems", ["chapter"], unique=False)
    op.create_index(op.f("ix_problems_difficulty"), "problems", ["difficulty"], unique=False)
    op.create_index(op.f("ix_problems_id"), "problems", ["id"], unique=False)
    op.create_index(op.f("ix_problems_subject"), "problems", ["subject"], unique=False)
    op.create_index("ix_problems_topic", "problems", ["topic"], unique=False)

    op.create_table(
        "users",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("firebase_uid", sa.String(length=128), nullable=False),
        sa.Column("email", sa.String(length=320), nullable=False),
        sa.Column("display_name", sa.String(length=200), nullable=True),
        sa.Column("photo_url", sa.String(length=500), nullable=True),
        sa.Column("class_level", sa.String(length=20), nullable=True),
        sa.Column("stream", sa.String(length=50), nullable=True),
        sa.Column("is_admin", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_users_email"), "users", ["email"], unique=True)
    op.create_index(op.f("ix_users_firebase_uid"), "users", ["firebase_uid"], unique=True)
    op.create_index(op.f("ix_users_id"), "users", ["id"], unique=False)

    op.create_table(
        "comments",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("parent_id", sa.Integer(), nullable=True),
        sa.Column("text", sa.Text(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["parent_id"], ["comments.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index(op.f("ix_comments_id"), "comments", ["id"], unique=False)
    op.create_index(op.f("ix_comments_problem_id"), "comments", ["problem_id"], unique=False)
    op.create_index(op.f("ix_comments_user_id"), "comments", ["user_id"], unique=False)

    # legacy daily table (if you still need it)
    op.create_table(
        "daily_problems",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("subject", sa.Enum("math", "physics", "chemistry", name="subjectenum"), nullable=False),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("is_active", sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("date", "subject", name="uq_daily_subject_date"),
        sa.UniqueConstraint("problem_id"),
    )
    op.create_index(op.f("ix_daily_problems_date"), "daily_problems", ["date"], unique=False)
    op.create_index(op.f("ix_daily_problems_id"), "daily_problems", ["id"], unique=False)
    op.create_index(op.f("ix_daily_problems_subject"), "daily_problems", ["subject"], unique=False)
    op.create_index("ix_daily_subject_date", "daily_problems", ["subject", "date"], unique=False)

    # new rollout table
    op.create_table(
        "daily_rollouts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("date", sa.Date(), nullable=False),
        sa.Column("subject", sa.String(length=20), nullable=False),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("date", "subject", name="uq_daily_rollouts_date_subject"),
    )
    op.create_index("ix_daily_rollouts_subject_date", "daily_rollouts", ["subject", "date"], unique=False)

    op.create_table(
        "problem_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "problem_id", name="uq_like_once"),
    )
    # RENAMED to be schema-unique
    op.create_index("ix_problem_likes_problem", "problem_likes", ["problem_id"], unique=False)
    op.create_index("ix_problem_likes_user", "problem_likes", ["user_id"], unique=False)
    op.create_index(op.f("ix_problem_likes_id"), "problem_likes", ["id"], unique=False)
    op.create_index(op.f("ix_problem_likes_problem_id"), "problem_likes", ["problem_id"], unique=False)
    op.create_index(op.f("ix_problem_likes_user_id"), "problem_likes", ["user_id"], unique=False)

    op.create_table(
        "question_attempts",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("chosen_option", sa.String(length=1), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "problem_id", name="uq_attempt_user_problem"),
    )
    op.create_index("ix_attempt_problem", "question_attempts", ["problem_id"], unique=False)
    op.create_index("ix_attempt_user", "question_attempts", ["user_id"], unique=False)

    op.create_table(
        "question_likes",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=False),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("created_at", sa.DateTime(), server_default=sa.func.now(), nullable=False),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="CASCADE"),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint("user_id", "problem_id", name="uq_like_user_problem"),
    )
    # RENAMED to be schema-unique
    op.create_index("ix_question_likes_problem", "question_likes", ["problem_id"], unique=False)
    op.create_index("ix_question_likes_user", "question_likes", ["user_id"], unique=False)

    op.create_table(
        "user_answers",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("user_id", sa.Integer(), nullable=True),
        sa.Column("problem_id", sa.Integer(), nullable=False),
        sa.Column("chosen_option", sa.String(length=1), nullable=False),
        sa.Column("is_correct", sa.Boolean(), nullable=False),
        sa.Column("created_at", sa.DateTime(timezone=True), server_default=sa.text("now()"), nullable=False),
        sa.CheckConstraint("chosen_option IN ('A','B','C','D')", name="ck_chosen_option"),
        sa.ForeignKeyConstraint(["problem_id"], ["problems.id"], ondelete="CASCADE"),
        sa.ForeignKeyConstraint(["user_id"], ["users.id"], ondelete="SET NULL"),
        sa.PrimaryKeyConstraint("id"),
    )
    op.create_index("ix_answers_problem_user", "user_answers", ["problem_id", "user_id"], unique=False)
    op.create_index(op.f("ix_user_answers_id"), "user_answers", ["id"], unique=False)
    op.create_index(op.f("ix_user_answers_problem_id"), "user_answers", ["problem_id"], unique=False)
    op.create_index(op.f("ix_user_answers_user_id"), "user_answers", ["user_id"], unique=False)
    # ### end Alembic commands ###


def downgrade() -> None:
    """Downgrade schema."""
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_index(op.f("ix_user_answers_user_id"), table_name="user_answers")
    op.drop_index(op.f("ix_user_answers_problem_id"), table_name="user_answers")
    op.drop_index(op.f("ix_user_answers_id"), table_name="user_answers")
    op.drop_index("ix_answers_problem_user", table_name="user_answers")
    op.drop_table("user_answers")

    op.drop_index("ix_question_likes_user", table_name="question_likes")
    op.drop_index("ix_question_likes_problem", table_name="question_likes")
    op.drop_table("question_likes")

    op.drop_index("ix_attempt_user", table_name="question_attempts")
    op.drop_index("ix_attempt_problem", table_name="question_attempts")
    op.drop_table("question_attempts")

    op.drop_index(op.f("ix_problem_likes_user_id"), table_name="problem_likes")
    op.drop_index(op.f("ix_problem_likes_problem_id"), table_name="problem_likes")
    op.drop_index(op.f("ix_problem_likes_id"), table_name="problem_likes")
    op.drop_index("ix_problem_likes_user", table_name="problem_likes")
    op.drop_index("ix_problem_likes_problem", table_name="problem_likes")
    op.drop_table("problem_likes")

    op.drop_index("ix_daily_rollouts_subject_date", table_name="daily_rollouts")
    op.drop_table("daily_rollouts")

    op.drop_index("ix_daily_subject_date", table_name="daily_problems")
    op.drop_index(op.f("ix_daily_problems_subject"), table_name="daily_problems")
    op.drop_index(op.f("ix_daily_problems_id"), table_name="daily_problems")
    op.drop_index(op.f("ix_daily_problems_date"), table_name="daily_problems")
    op.drop_table("daily_problems")

    op.drop_index(op.f("ix_comments_user_id"), table_name="comments")
    op.drop_index(op.f("ix_comments_problem_id"), table_name="comments")
    op.drop_index(op.f("ix_comments_id"), table_name="comments")
    op.drop_table("comments")

    op.drop_index(op.f("ix_users_id"), table_name="users")
    op.drop_index(op.f("ix_users_firebase_uid"), table_name="users")
    op.drop_index(op.f("ix_users_email"), table_name="users")
    op.drop_table("users")

    op.drop_index("ix_problems_topic", table_name="problems")
    op.drop_index(op.f("ix_problems_subject"), table_name="problems")
    op.drop_index(op.f("ix_problems_id"), table_name="problems")
    op.drop_index(op.f("ix_problems_difficulty"), table_name="problems")
    op.drop_index("ix_problems_chapter", table_name="problems")
    op.drop_table("problems")
    # ### end Alembic commands ###
